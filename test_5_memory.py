from memory_profiler import profile


@profile()
def my_original():
    my_gen = [i for i in range(20, 240) if i % 20 == 0 or i % 21 == 0]


my_original()

"""Неверно выполненное задание 3 из ДЗ 4, снизившее оценку"""


@profile
def my_origin():
    my_gen = (i for i in range(20, 24021) if i % 20 == 0 or i % 21 == 0)


# print(i)


my_origin()

"""То как задача должна была быть решена. Вместо LC здесь применен генератор.
Он создает по одному элементу за раз и только при запросе. 
LC и список, в свою очередь, резервируют память для всего списка."""


@profile()
def my_filter():
    def func(i):
        return i % 20 == 0 or i % 21 == 0

    filter(func, range(20, 240))


my_filter()

"""filter() является встроенной функцией,ей требуется меньше памяти, чем на 
создание нового итерируемого объекта, так как она использует исходный 
итерируемый объект и возвращает итератор, а не список или другой объект, 
содержащий все отобранные элементы."""

from timeit import timeit


def swap():
    new_list = [int(x) for x in '1 2 3 4 5'.split()]
    if len(new_list) % 2 > 0:
        i = len(new_list) - 2
    else:
        i = len(new_list) - 1
    while i > 0:
        new_list[i] ^= new_list[i - 1]
        new_list[i - 1] ^= new_list[i]
        new_list[i] ^= new_list[i - 1]
        i -= 2
    print(new_list)


print(timeit('swap()', setup='from __main__ import swap', number=1000000))

"""После оптимизации -> 3.4715666659976705. 
    Находясь в поисках дополнительной 
информации, я наткнулся на побитовый оператор '^'. Из источника я узнал,
что он работает только с целыми числами и сравнивает каждый бит первого 
операнда с соответствующим битом второго операнда. Если биты совпадают, 
возвращается 0, иначе возвращается 1. 
Эта операция выполняется для каждого бита отдельно, что делает ее очень 
быстрой и эффективной
    Скорость также была увеличена за счет
использования LC, который использует встроенную оптимизацию интерпретатора 
Python для выполнения операций."""
